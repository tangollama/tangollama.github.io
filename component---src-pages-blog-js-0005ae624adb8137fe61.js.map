{"version":3,"sources":["webpack:///./src/utils/helpers.js","webpack:///./src/pages/blog.js"],"names":["getImageMap","images","regex","hasMultipleImages","limit","reduce","map","image","slug","node","relativePath","match","hasOwnProperty","length","push","childImageSharp","fluid","arr","data","allFeaturedImages","allFile","edges","allPosts","allMdx","featuredImageMap","Utils","title","className","key","id","to","fields","featuredImage","frontmatter","subtitle","date","excerpt"],"mappings":"mLAAe,G,oBAAA,CACbA,YAAa,SAACC,EAAQC,EAAOC,EAA2BC,GACtD,YADoE,IAAzCD,OAAoB,QAAqB,IAAdC,MAAQ,GACvDH,EAAOI,QAAO,SAACC,EAAKC,GACzB,IAAMC,EAAOD,EAAME,KAAKC,aAAaC,MAAMT,GAAO,GAClD,GAAIC,EACF,GAAIG,EAAIM,eAAeJ,GACjBF,EAAIE,GAAMK,QAAUT,GACtBE,EAAIE,GAAMM,KAAKP,EAAME,KAAKM,gBAAgBC,WACvC,CACL,IAAMC,EAAM,GACZA,EAAIH,KAAKP,EAAME,KAAKM,gBAAgBC,OACpCV,EAAIE,GAAQS,OAGdX,EAAIE,GAAQD,EAAME,KAAKM,gBAAgBC,MAEzC,OAAOV,IACN,Q,kCCjBP,oEAMe,sBAAe,IAAZY,EAAW,EAAXA,KACVC,EAAoBD,EAAKE,QAAQC,OAAS,GAC1CC,EAAWJ,EAAKK,OAAOF,OAAS,GAEhCG,EAAmBC,IAAMzB,YAAYmB,EAD7B,kBAGd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKO,MAAM,SACX,kBAAC,IAAD,CAAWA,MAAM,QAAjB,SACA,8GAIA,kBAAC,IAAD,CACEV,OAAK,EACLW,UAAU,gEAETL,EAAShB,KAAI,gBAAGG,EAAH,EAAGA,KAAH,OACZ,yBAAKmB,IAAKnB,EAAKoB,GAAIF,UAAU,OAC3B,kBAAC,IAAD,CACEG,GAAIrB,EAAKsB,OAAOvB,KAChBwB,cAAeR,EAAiBf,EAAKsB,OAAOvB,MAC5CkB,MAAOjB,EAAKwB,YAAYP,MACxBQ,SAAUzB,EAAKwB,YAAYE,KAC3BC,QAAS3B,EAAK2B","file":"component---src-pages-blog-js-0005ae624adb8137fe61.js","sourcesContent":["export default {\n  getImageMap: (images, regex, hasMultipleImages = false, limit = 3) => {\n    return images.reduce((map, image) => {\n      const slug = image.node.relativePath.match(regex)[0];\n      if (hasMultipleImages) {\n        if (map.hasOwnProperty(slug)) {\n          if (map[slug].length <= limit)\n            map[slug].push(image.node.childImageSharp.fluid);\n        } else {\n          const arr = [];\n          arr.push(image.node.childImageSharp.fluid);\n          map[slug] = arr;\n        }\n      } else {\n        map[slug] = image.node.childImageSharp.fluid;\n      }\n      return map;\n    }, {});\n  },\n};\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { PageLayout, PageTitle, BlogLink } from \"../components\";\nimport { SEO, Utils } from \"../utils\";\nimport { Container } from \"react-bootstrap\";\n\nexport default ({ data }) => {\n  const allFeaturedImages = data.allFile.edges || [];\n  const allPosts = data.allMdx.edges || [];\n  const regex = /\\/[blog].*\\/|$/;\n  const featuredImageMap = Utils.getImageMap(allFeaturedImages, regex);\n  // console.debug(allPosts);\n  return (\n    <PageLayout>\n      <SEO title=\"Blog\" />\n      <PageTitle title=\"Blog\">Posts</PageTitle>\n      <p>\n        When I write something for public, career-focused consumption, it ends\n        up here.\n      </p>\n      <Container\n        fluid\n        className=\"p-3 w-auto text-left d-flex flex-wrap justify-content-center\"\n      >\n        {allPosts.map(({ node }) => (\n          <div key={node.id} className=\"p-3\">\n            <BlogLink\n              to={node.fields.slug}\n              featuredImage={featuredImageMap[node.fields.slug]}\n              title={node.frontmatter.title}\n              subtitle={node.frontmatter.date}\n              excerpt={node.excerpt}\n            />\n          </div>\n        ))}\n      </Container>\n    </PageLayout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            description\n            tags\n            author\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n    allFile(\n      filter: {\n        extension: { eq: \"jpg\" }\n        relativePath: { regex: \"/feature/\" }\n        relativeDirectory: { regex: \"/content/blog/\" }\n      }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 400) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n          relativePath\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}