{"version":3,"file":"component---src-pages-talks-js-2de0085dd73a01dc0f93.js","mappings":"iLAMA,mBAAe,GAAe,IAAZA,EAAW,EAAXA,KACVC,EAAoBD,EAAKE,QAAQC,OAAS,GAC1CC,EAAWJ,EAAKK,OAAOF,OAAS,GAEhCG,EAAmBC,EAAAA,GAAAA,YAAkBN,EAD7B,mBAGd,OACE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAKO,MAAM,UACX,gBAAC,KAAD,CAAWA,MAAM,UACjB,wEACA,gBAAC,IAAD,CACEC,OAAK,EACLC,UAAU,gEAETN,EAASO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACZ,uBAAKC,IAAKD,EAAKE,GAAIJ,UAAU,OAC3B,gBAAC,KAAD,CACEK,GAAIH,EAAKI,OAAOC,KAChBC,cAAeZ,EAAiBM,EAAKI,OAAOC,MAC5CT,MAAOI,EAAKO,YAAYX,MACxBY,SAAUR,EAAKO,YAAYE,KAC3BC,QAASV,EAAKO,YAAYG,kB,6FC1BxC,G,QAAA,CACEC,YAAa,SAACC,EAAQC,EAAOC,EAA2BC,GAEtD,YAFoE,IAAzCD,IAAAA,GAAoB,QAAqB,IAAdC,IAAAA,EAAQ,GAEvDH,EAAOI,QAAO,SAACjB,EAAKkB,GACzB,IAAMZ,EAAOY,EAAMjB,KAAKkB,aAAaC,MAAMN,GAAO,GAE5CO,EAAMH,EAAMjB,KAElB,GAAIc,EACF,GAAIf,EAAIsB,eAAehB,GACjBN,EAAIM,GAAMiB,QAAUP,GAAOhB,EAAIM,GAAMkB,KAAKH,OACzC,CACL,IAAMI,EAAM,GACZA,EAAID,KAAKH,GACTrB,EAAIM,GAAQmB,OAGdzB,EAAIM,GAAQe,EAEd,OAAOrB,IACN","sources":["webpack://tangollama.github.io/./src/pages/talks.js","webpack://tangollama.github.io/./src/utils/helpers.js"],"sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { PageLayout, PageTitle, BlogLink } from \"../components\";\nimport { SEO, Utils } from \"../utils\";\nimport { Container } from \"react-bootstrap\";\n\nexport default ({ data }) => {\n  const allFeaturedImages = data.allFile.edges || [];\n  const allPosts = data.allMdx.edges || [];\n  const regex = /\\/[talks].*\\/|$/;\n  const featuredImageMap = Utils.getImageMap(allFeaturedImages, regex);\n  // console.debug([allPosts, featuredImageMap]);\n  return (\n    <PageLayout>\n      <SEO title=\"Talks\" />\n      <PageTitle title=\"Talks\" />\n      <p>Check out a few of my public presentations.</p>\n      <Container\n        fluid\n        className=\"p-3 w-auto text-left d-flex flex-wrap justify-content-center\"\n      >\n        {allPosts.map(({ node }) => (\n          <div key={node.id} className=\"p-3\">\n            <BlogLink\n              to={node.fields.slug}\n              featuredImage={featuredImageMap[node.fields.slug]}\n              title={node.frontmatter.title}\n              subtitle={node.frontmatter.date}\n              excerpt={node.frontmatter.excerpt}\n            />\n          </div>\n        ))}\n      </Container>\n    </PageLayout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(\n      filter: { fileAbsolutePath: { regex: \"/talks/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            description\n            tags\n            author\n            date(formatString: \"DD MMMM, YYYY\")\n            excerpt\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    allFile(\n      filter: {\n        extension: { in: [\"jpg\", \"png\"] }\n        relativePath: { regex: \"/feature/\" }\n        relativeDirectory: { regex: \"/content/talks/\" }\n      }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(layout: CONSTRAINED)\n          }\n          relativePath\n        }\n      }\n    }\n  }\n`;\n","import { getSrc } from \"gatsby-plugin-image\";\n\nexport default {\n  getImageMap: (images, regex, hasMultipleImages = false, limit = 3) => {\n    //console.debug(images);\n    return images.reduce((map, image) => {\n      const slug = image.node.relativePath.match(regex)[0];\n      //const img = getSrc(image.node);\n      const img = image.node;\n      //console.debug(img);\n      if (hasMultipleImages) {\n        if (map.hasOwnProperty(slug)) {\n          if (map[slug].length <= limit) map[slug].push(img);\n        } else {\n          const arr = [];\n          arr.push(img);\n          map[slug] = arr;\n        }\n      } else {\n        map[slug] = img;\n      }\n      return map;\n    }, {});\n  },\n};\n"],"names":["data","allFeaturedImages","allFile","edges","allPosts","allMdx","featuredImageMap","Utils","title","fluid","className","map","node","key","id","to","fields","slug","featuredImage","frontmatter","subtitle","date","excerpt","getImageMap","images","regex","hasMultipleImages","limit","reduce","image","relativePath","match","img","hasOwnProperty","length","push","arr"],"sourceRoot":""}